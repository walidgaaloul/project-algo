FUNCTION Dotproduct(var ARRAY_OF INTEGER[50], v2 ARRAY_OF INTEGER[50]) : FLOAT
VAR
    ps:INTEGER;
    i:INTEGER;
BEGIN
   ps:=0;
    FOR i FROM 0 TO v1.length STEP step  DO
        ps=ps+ v1[i] * v2[i];
    END_FOR
    RETURN ps ;
END

ALGORITHM algorithm_function_vecteur
VAR
    vectors:ARRAY_OF INTEGER[50]:=[[7, 1, 1],[6, 0, 2], [5, 7, 0], [3, 1, 2], [2, 3 ,8], [0, 0, 0]];
BEGIN
    FOR i FROM 0 TO vectors.length STEP step  DO
        FOR j FROM i+1 TO  vectors.length step  DO
            IF (Dotproduct(vectors[i],vectors[j]=0)) THEN
                write(vectors[i],"and",vectors[j],"are orthogonal")
            END_IF
        END_FOR
    END_FOR
END